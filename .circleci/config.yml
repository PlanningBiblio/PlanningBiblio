# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
executors:
  plb:
    parameters:
      phpvers:
        type: string
        default: '7.4'
    docker:
      - image: circleci/php:<< parameters.phpvers >>-cli
      - image: circleci/mariadb:10.5-ram
        environment:
          MYSQL_ROOT_PASSWORD: rootplb
          MYSQL_DATABASE: planningb
          MYSQL_USER: plb
          MYSQL_PASSWORD: plb

jobs:
  install-and-test:
    parameters:
      e:
        type: executor
    executor: << parameters.e >>
    steps:
      - checkout

      # For google chrome.
      - run: sudo sh -c 'echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
      - run: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo docker-php-ext-install mysqli
      - run: sudo docker-php-ext-install pdo_mysql
      - run: sudo apt install -y google-chrome-stable

      # Chrome driver.
      - run: wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
      - run: sudo unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cp .circleci/.env.test.local .env.test.local
      - run: cp .circleci/.env.local .env.local
      - run: rm -rf vendor
      - run: composer install -n --prefer-dist
      - run: vendor/bin/bdi detect drivers

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # run tests with phpunit or codecept
      - run: sudo cp $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini && echo 'xdebug.mode=coverage' | sudo tee -a $PHP_INI_DIR/php.ini
      - run: ./vendor/bin/phpunit --coverage-text --coverage-clover coverage.xml --bootstrap tests/bootstrap.php tests/
      - run: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  php7-4:
    jobs:
      - install-and-test:
          name: phpvers:7.4
          e:
            name: plb
            phpvers: '7.4'
